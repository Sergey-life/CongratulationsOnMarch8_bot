const { Telegraf, Markup } = require('telegraf')
require('dotenv').config()
const botCommands = require('./const')

const bot = new Telegraf(process.env.BOT_TOKEN)
bot.start((ctx) => ctx.reply("–ü—Ä–∏–≤—ñ—Çüñê, —è –±–æ—Ç.ü§ñüòé –ú–µ–Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ –¥–ª—è —Ç–æ–≥–æ —â–æ–± –ø—Ä–∏–≤—ñ—Ç–∞—Ç–∏ —Ç–µ–±–µ –∑ —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—ñ–º —Å–≤—è—Ç–æ–ºüå∑üåπüå∏üåºüå∫!!!\n\r –í–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î –ø–æ–≤–Ω–µ —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ–π –º–æ–≤—ñüá∫üá¶‚å®Ô∏è." ))
bot.help((ctx) => ctx.reply(botCommands.commands))
bot.command('interesting', async (ctx) => {
    try {
        await ctx.replyWithHTML('<strong>–ü—Ä–æ —Ü–µ —Å–≤—è—Ç–æ</strong>', Markup.inlineKeyboard(
            [
                [Markup.button.callback('–¶—ñ–∫–∞–≤—ñ —Ñ–∞–∫—Ç–∏', 'btn_1')],
                [Markup.button.callback('–ú—É–∑–∏–∫–∞', 'btn_2'), Markup.button.callback('–í—ñ–¥–µ–æ', 'btn_3')]
            ]
        ))
    } catch (e) {
        console.error(e)
    }
})
// –ù–∞—Å—Ç—è
bot.hears('–ê–Ω–∞—Å—Ç–∞—Å—ñ—è –•–∞—Ä—á–µ–Ω–∫–æ', async (ctx) => {
    try {
        if (await ctx.message.from.username === 'nastia199212') {
            await ctx.replyWithHTML(`–ü—Ä–∏–≤—ñ—Ç, ${'–ó–∞–π—Ü—ñ–∫!üòª\n\r' + botCommands.nastyha}`, Markup.inlineKeyboard(
                [
                    [Markup.button.callback("–¶—ñ–∫–∞–≤—ñ —Ñ–∞–∫—Ç–∏ –ø—Ä–æ —Ç–≤–æ—î —ñ–º'—è", 'btn_1')],
                    [Markup.button.callback('–ú—É–∑–∏—á–Ω–µ –≤—ñ—Ç–∞–Ω–Ω—è', 'btn_2'), Markup.button.callback('–í—ñ–¥–µ–æ –≤—ñ—Ç–∞–Ω–Ω—è', 'btn_3')]
                ]
            ))
        } else {
            await ctx.reply('–Ø —Ç–µ–±–µ –Ω–µ –∑–Ω–∞—é!')
        }
    } catch (e) {
        console.error(e)
    }
})
//–ú–∞–º–∞
bot.hears('–¢–µ—Ç—è–Ω–∞ –ü—É—à—Ç–∞—Ä–∏–∫', async (ctx) => {
    try {
        // if (await ctx.message.from.username === 'nastia199212') {
            await ctx.replyWithHTML(`–ü—Ä–∏–≤—ñ—Ç, ${'–ú–∞–º–∞ –°–µ—Ä–≥—ñ—è –•–∞—Ä—á–µ–Ω–∫–æ!üòª\n\r' + botCommands.VitannaMama}`, Markup.inlineKeyboard(
                [
                    [Markup.button.callback("–¶—ñ–∫–∞–≤—ñ —Ñ–∞–∫—Ç–∏ –ø—Ä–æ —Ç–≤–æ—î —ñ–º'—è", 'tetyana_btn_1')],
                    [Markup.button.callback('–ú—É–∑–∏—á–Ω–µ –≤—ñ—Ç–∞–Ω–Ω—è', 'tetyana_btn_2'), Markup.button.callback('–í—ñ–¥–µ–æ –≤—ñ—Ç–∞–Ω–Ω—è', 'tetyana_btn_3')]
                ]
            ))
        // } else {
        //     await ctx.reply('–Ø —Ç–µ–±–µ –Ω–µ –∑–Ω–∞—é!')
        // }
    } catch (e) {
        console.error(e)
    }
})
function addActionBot(idButton, src, data) {
    bot.action(idButton, async (ctx) => {
        try {
            await ctx.answerCbQuery()
            if (src !== false) {
                await ctx.replyWithPhoto({
                    source: src
                })
            }
            await ctx.replyWithHTML(data, {
                disable_web_page_preview: true
            })
        } catch (e) {
            console.error(e)
        }
    })
}

addActionBot('btn_1', './img/nastya_1.jpg', botCommands.infoTextNastyha)
addActionBot('btn_2', './img/2.jpg', botCommands.infoMusicNastyha)
addActionBot('btn_3', './img/3.jpg', botCommands.infoVideoNastyha)

addActionBot('tetyana_btn_1', './img/tetyana_1.jpg', botCommands.infoTextMama)
addActionBot('tetyana_btn_2', './img/2.jpg', botCommands.infoMusicMama)
addActionBot('tetyana_btn_3', './img/3.jpg', botCommands.infoVideoMama)

bot.launch()

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))